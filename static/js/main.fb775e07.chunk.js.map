{"version":3,"sources":["components/AppBar.tsx","pages/About.tsx","pages/Education.tsx","pages/Home.tsx","pages/Projects.tsx","pages/Skills.tsx","pages/Work.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","transition","transitions","create","duration","leavingScreen","easing","sharp","zIndex","drawer","appBarShift","marginLeft","enteringScreen","width","flexShrink","whiteSpace","drawerClose","overflowX","spacing","breakpoints","up","drawerOpen","hide","display","menuButton","marginRight","toolbar","alignItems","justifyContent","padding","mixins","menuItems","Icon","Home","displayText","key","link","Person","Code","Work","School","Assignment","MainAppBar","classes","useTheme","React","useState","open","setOpen","Fragment","CssBaseline","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","ReactGA","event","category","action","edge","Menu","Typography","variant","noWrap","Drawer","paper","direction","ChevronRight","ChevronLeft","Divider","List","map","menuItem","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","card","margin","maxWidth","divider","marginBottom","paperBackground","handleClick","title","About","pageview","window","location","pathname","search","Grid","container","item","xs","gutterBottom","Paper","square","value","section","index","arr","paragraph","align","length","Card","CardContent","CardActions","Button","size","href","target","rel","paddingBottom","university","city","state","start","end","Education","styles","avatar","height","descriptions","props","descriptionInterval","counter","descriptionIndex","this","setInterval","setState","prevState","clearInterval","justify","Avatar","alt","src","Component","withStyles","projects","description","links","Projects","project","lg","skillList","area","experienceWith","knowledgeable","proficient","Skills","skill","join","experiences","company","experience","content","flexGrow","root","App","prefersDarkMode","useMediaQuery","mainTheme","createMuiTheme","palette","contrastText","dark","light","main","secondary","type","initialize","ThemeProvider","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb775e07.chunk.js","sourcesContent":["import {\n    AppBar,\n    CssBaseline,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport {\n    createStyles,\n    makeStyles,\n    Theme,\n    useTheme,\n} from '@material-ui/core/styles';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport {\n    Assignment,\n    ChevronLeft,\n    ChevronRight,\n    Code,\n    Home,\n    Menu,\n    Person,\n    School,\n    Work,\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, { ComponentType } from 'react';\nimport ReactGA from 'react-ga';\nimport { Link } from 'react-router-dom';\n\ninterface MenuItem {\n    Icon: ComponentType<SvgIconProps>;\n    displayText: string;\n    key: string;\n    link: string;\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            transition: theme.transitions.create(['width', 'margin'], {\n                duration: theme.transitions.duration.leavingScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            zIndex: theme.zIndex.drawer + 1,\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['width', 'margin'], {\n                duration: theme.transitions.duration.enteringScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n        drawer: {\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n        },\n        drawerClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                duration: theme.transitions.duration.leavingScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        drawerOpen: {\n            transition: theme.transitions.create('width', {\n                duration: theme.transitions.duration.enteringScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            width: drawerWidth,\n        },\n        hide: {\n            display: 'none',\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        toolbar: {\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n        },\n    })\n);\n\nconst menuItems: MenuItem[] = [\n    {\n        Icon: Home,\n        displayText: 'Home',\n        key: 'home',\n        link: '/',\n    },\n    {\n        Icon: Person,\n        displayText: 'About',\n        key: 'about',\n        link: '/about',\n    },\n    {\n        Icon: Code,\n        displayText: 'Skills',\n        key: 'skills',\n        link: '/skills',\n    },\n    {\n        Icon: Work,\n        displayText: 'Experience',\n        key: 'experience',\n        link: '/experience',\n    },\n    {\n        Icon: School,\n        displayText: 'Education',\n        key: 'education',\n        link: '/education',\n    },\n    {\n        Icon: Assignment,\n        displayText: 'Projects',\n        key: 'projects',\n        link: '/projects',\n    },\n];\n\nconst MainAppBar: React.FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n        ReactGA.event({\n            category: 'Navigation',\n            action: 'Toggled drawer open',\n        });\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n        ReactGA.event({\n            category: 'Navigation',\n            action: 'Toggled drawer close',\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <Menu />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Sarthak Bhandari\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? (\n                            <ChevronRight />\n                        ) : (\n                            <ChevronLeft />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {menuItems.map(menuItem => (\n                        <ListItem\n                            button\n                            key={menuItem.key}\n                            component={Link}\n                            to={menuItem.link}\n                            onClick={() =>\n                                ReactGA.event({\n                                    category: 'Navigation',\n                                    action: `clicked ${menuItem.displayText}`,\n                                })\n                            }\n                        >\n                            <ListItemIcon>\n                                <menuItem.Icon />\n                            </ListItemIcon>\n                            <ListItemText primary={menuItem.displayText} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n        </React.Fragment>\n    );\n};\n\nexport default MainAppBar;\n","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Grid,\n    Paper,\n    Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            margin: '1rem 0',\n            maxWidth: '20rem',\n            width: '100%',\n        },\n        divider: {\n            marginBottom: '1rem',\n        },\n        paperBackground: {\n            padding: theme.spacing(3, 2),\n        },\n    })\n);\n\nconst handleClick = (title: string) => {\n    ReactGA.event({\n        category: 'About',\n        action: `Clicked ${title}`,\n    });\n};\n\nconst About: React.FC = () => {\n    const classes = useStyles();\n    const sections = [\n        {\n            key: 'about',\n            value:\n                \"Hey! I'm Sarthak, a midwest boy in the big city. Currently I live in NYC, spending my days roaming around the city. I enjoy science fiction movies, electronic music, the rad themes of the 80s, and terrible jokes. I graduated from the University of Michigan in 2017 with a degree in Computer Science (Go Blue!).\",\n        },\n        {\n            key: 'work',\n            value:\n                \"Currently I'm working as a web developer at American Express. In the past I've worked on Android mobile apps and dabbled in machine learning, databases and computer security. My passion lies in human/computer interaction and good design.\",\n        },\n    ];\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        About Me\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperBackground} square>\n                        {sections.map((section, index, arr) => (\n                            <React.Fragment key={section.key}>\n                                <Typography paragraph align=\"left\">\n                                    {section.value}\n                                </Typography>\n                                {arr.length - 1 === index ? null : (\n                                    <Divider\n                                        variant=\"middle\"\n                                        className={classes.divider}\n                                    />\n                                )}\n                            </React.Fragment>\n                        ))}\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Card className={classes.card}>\n                        <CardContent>Reach out to me!</CardContent>\n                        <CardActions>\n                            <Button\n                                size=\"small\"\n                                href=\"https://github.com/sartechb\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                onClick={() => handleClick('Github')}\n                            >\n                                Github\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                href=\"https://twitter.com/sartechb\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                onClick={() => handleClick('Twitter')}\n                            >\n                                Twitter\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                href=\"https://www.linkedin.com/in/sarthakbhandari/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                onClick={() => handleClick('LinkedIn')}\n                            >\n                                LinkedIn\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                href=\"mailto:hello@sarthakb.com\"\n                                rel=\"noopener noreferrer\"\n                                onClick={() => handleClick('Email')}\n                            >\n                                Email\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default About;\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        paddingBottom: {\n            paddingBottom: '1rem',\n        },\n    })\n);\n\ninterface Duration {\n    start: string;\n    end: string;\n}\n\ninterface Location {\n    city: string;\n    state: string;\n}\n\ninterface Work {\n    school: string;\n    degree: string;\n    location: Location;\n    duration: Duration;\n    description: string;\n}\n\nconst university: Work = {\n    school: 'University of Michigan',\n    degree: 'Bachelors of Engineering',\n    location: {\n        city: 'Ann Arbor',\n        state: 'Michigan',\n    },\n    duration: {\n        start: \"September '13\",\n        end: \"May '17\",\n    },\n    description:\n        'Graduated Cum Laude. Took a variety of classes including machine learning, operating systems and distributed systems. Minored in entrepreneurship. I sometimes awkwardly say \"Go Blue!\" to people wearing Michigan gear when I see them.',\n};\n\nexport const Education: React.FC = () => {\n    const classes = useStyles();\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        Education\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Card>\n                            <CardContent>\n                                <Typography\n                                    variant=\"h5\"\n                                    component=\"h2\"\n                                    align=\"left\"\n                                    className={classes.paddingBottom}\n                                >\n                                    {university.school}\n                                </Typography>\n                                <Typography\n                                    align=\"left\"\n                                    variant=\"subtitle1\"\n                                    component=\"p\"\n                                >\n                                    {university.degree}\n                                </Typography>\n                                <Typography\n                                    align=\"left\"\n                                    variant=\"subtitle2\"\n                                    component=\"p\"\n                                >\n                                    {university.duration.start} -{' '}\n                                    {university.duration.end}\n                                </Typography>\n                                <Typography\n                                    align=\"left\"\n                                    variant=\"subtitle2\"\n                                    component=\"p\"\n                                    className={classes.paddingBottom}\n                                >\n                                    {university.location.city},{' '}\n                                    {university.location.state}\n                                </Typography>\n                                <Typography align=\"left\" variant=\"body2\">\n                                    {university.description}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n","import { Avatar, Button, Grid, Typography } from '@material-ui/core';\nimport { createStyles, withStyles, WithStyles } from '@material-ui/styles';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst styles = createStyles({\n    avatar: {\n        height: 256,\n        margin: 10,\n        marginBottom: 50,\n        width: 256,\n    },\n});\n\nconst descriptions = [\n    'a web developer',\n    'a New Yorker',\n    'a fan of the 80s',\n    'a PC gamer',\n    'an amateur photographer',\n    'a cooking enthusiast',\n];\ninterface HomeProps extends WithStyles<typeof styles> {\n    prop: string;\n}\ninterface HomeState {\n    counter: number;\n    descriptionIndex: number;\n}\nclass Home extends React.Component<HomeProps, HomeState> {\n    public descriptionInterval!: NodeJS.Timeout;\n    public constructor(props: Readonly<HomeProps>) {\n        super(props);\n        this.state = {\n            counter: 0,\n            descriptionIndex: 0,\n        };\n    }\n\n    public componentDidMount() {\n        this.descriptionInterval = setInterval(() => {\n            if (this.state.counter === descriptions.length) {\n                this.setState({ counter: 0 });\n            }\n            this.setState(prevState => ({\n                counter: prevState.counter + 1,\n                descriptionIndex: prevState.counter % descriptions.length,\n            }));\n        }, 3000);\n    }\n\n    public componentWillUnmount() {\n        clearInterval(this.descriptionInterval);\n    }\n\n    public handleClick() {\n        ReactGA.event({\n            category: 'Home',\n            action: 'Downloaded resume',\n        });\n    }\n\n    public render() {\n        const { classes } = this.props;\n        const { descriptionIndex } = this.state;\n        ReactGA.pageview(window.location.pathname + window.location.search);\n\n        return (\n            <React.Fragment>\n                <Grid\n                    container\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    direction=\"column\"\n                >\n                    <Grid item xs={12}>\n                        <Avatar\n                            alt=\"Sarthak Bhandari\"\n                            src={process.env.PUBLIC_URL + '/avatar.jpg'}\n                            className={classes.avatar}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                            Hello, Sarthak here. I&apos;m{' '}\n                            {descriptions[descriptionIndex]}.\n                        </Typography>\n                    </Grid>\n                    <br />\n                    <Grid item>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            href={\n                                process.env.PUBLIC_URL +\n                                '/Bhandari_Sarthak_Resume_Web.pdf'\n                            }\n                            target=\"_blank\"\n                            onClick={this.handleClick}\n                        >\n                            Download Resume\n                        </Button>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Home);\n","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Grid,\n    Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        paddingBottom: {\n            paddingBottom: '1rem',\n        },\n    })\n);\n\ninterface Link {\n    title: string;\n    href: string;\n}\n\ninterface Project {\n    title: string;\n    description: string;\n    links: Link[];\n}\n\nconst projects: Project[] = [\n    {\n        title: 'Personal Site',\n        description:\n            'This site! Uses React with Material UI in TypeScript. Uses a TravisCI pipeline to build and is deployed to GitHub Pages.',\n        links: [\n            {\n                title: 'Source',\n                href: 'https://github.com/sartechb/sartechb.github.io',\n            },\n        ],\n    },\n    {\n        title: '(Old) Personal Site',\n        description:\n            'My old personal website hosted on Github Pages. Designed from scratch using MaterializeCss.',\n        links: [\n            {\n                title: 'Source',\n                href: 'https://github.com/sartechb/old-personal-site',\n            },\n        ],\n    },\n    {\n        title: 'Check.ai',\n        description:\n            'A web app created to save time and find the most relevant jobs based on the inputed preferences. Designed and developed the front end of the site.',\n        links: [\n            {\n                title: 'Source',\n                href: 'https://github.com/preetsmohan/check-ai',\n            },\n        ],\n    },\n    {\n        title: 'Wobetto',\n        description:\n            'Created a startup initiative focused on developing a tool to help students connect with each other. The tool was built for the web using the now defunct Facebook Parse library.',\n        links: [\n            {\n                title: 'Source',\n                href: 'https://github.com/sartechb/Wobetto',\n            },\n        ],\n    },\n];\n\nexport const Projects: React.FC = () => {\n    const classes = useStyles();\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        Projects\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2}>\n                    {projects.map(project => (\n                        <Grid item xs={12} lg={4} key={project.title}>\n                            <Card>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                        align=\"left\"\n                                        className={classes.paddingBottom}\n                                    >\n                                        {project.title}\n                                    </Typography>\n                                    <Typography align=\"left\" variant=\"body2\">\n                                        {project.description}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    {project.links.map(link => (\n                                        <Button\n                                            size=\"small\"\n                                            color=\"secondary\"\n                                            href={link.href}\n                                            key={link.href}\n                                            onClick={() =>\n                                                ReactGA.event({\n                                                    category: 'Projects',\n                                                    action: `Clicked source for ${project.title}`,\n                                                })\n                                            }\n                                        >\n                                            {link.title}\n                                        </Button>\n                                    ))}\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        title: {\n            paddingBottom: '1rem',\n        },\n    })\n);\n\ninterface Skill {\n    area: string;\n    experienceWith: string[];\n    knowledgeable: string[];\n    proficient: string[];\n}\n\nconst skillList: Skill[] = [\n    {\n        area: 'Front-End',\n        experienceWith: ['Sass', 'Babel', 'Webpack'],\n        knowledgeable: ['TypeScript', 'CSS', 'AngularJS', 'Redux'],\n        proficient: ['React', 'JavaScript/ES6', 'HTML'],\n    },\n    {\n        area: 'Back-End',\n        experienceWith: ['Java', 'Python (Flask, SciKit, NumPy)'],\n        knowledgeable: ['SQL'],\n        proficient: ['Node/Express'],\n    },\n    {\n        area: 'Testing & CI/CD',\n        experienceWith: ['Karma', 'Mocha', 'Cypress'],\n        knowledgeable: ['TravisCI', 'Wiremock', 'Webdriver', 'Selenium'],\n        proficient: ['Jenkins', 'Jest', 'Enzyme'],\n    },\n    {\n        area: 'Other',\n        experienceWith: ['Spanish', 'Hindi', 'Adobe Photoshop'],\n        knowledgeable: ['Windows', 'Linux', 'Microsoft Suite'],\n        proficient: ['English', 'MacOS'],\n    },\n];\n\nexport const Skills: React.FC = () => {\n    const classes = useStyles();\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        Skills\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2}>\n                    {skillList.map(skill => (\n                        <Grid item xs={12} lg={3} key={skill.area}>\n                            <Card>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                        align=\"left\"\n                                        className={classes.title}\n                                    >\n                                        {skill.area}\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        align=\"left\"\n                                    >\n                                        Proficient\n                                    </Typography>\n                                    <Typography align=\"left\">\n                                        {skill.proficient.join(', ')}\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        align=\"left\"\n                                    >\n                                        Knowledgeable\n                                    </Typography>\n                                    <Typography align=\"left\">\n                                        {skill.knowledgeable.join(', ')}\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        align=\"left\"\n                                    >\n                                        Experience With\n                                    </Typography>\n                                    <Typography align=\"left\">\n                                        {skill.experienceWith.join(', ')}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        paddingBottom: {\n            paddingBottom: '1rem',\n        },\n    })\n);\n\ninterface Duration {\n    start: string;\n    end: string;\n}\n\ninterface Location {\n    city: string;\n    state: string;\n}\n\ninterface Work {\n    company: string;\n    title: string;\n    location: Location;\n    duration: Duration;\n    description: string;\n}\n\nconst experiences: Work[] = [\n    {\n        company: 'Haven Life',\n        title: 'Software Engineer',\n        location: {\n            city: 'New York',\n            state: 'New York',\n        },\n        duration: {\n            start: \"July '20\",\n            end: 'Present',\n        },\n        description:\n            'Developing high visibility insurance software in Angular and Node.',\n    },\n    {\n        company: 'American Express',\n        title: 'Software Engineer',\n        location: {\n            city: 'New York',\n            state: 'New York',\n        },\n        duration: {\n            start: \"August '17\",\n            end: \"July '20\",\n        },\n        description:\n            'Developed high volume, high impact production software in React and Node. Led architecture discussions for new applications. Led automation efforts to provide end to end coverage over multiple applications. Migrated components from legacy AngularJS code to React. Led the intern program for my team and several lunch and learns for the wider org.',\n    },\n    {\n        company: 'American Express',\n        title: 'Software Engineer Intern',\n        location: {\n            city: 'New York',\n            state: 'New York',\n        },\n        duration: {\n            start: \"June '16\",\n            end: \"August '16\",\n        },\n        description:\n            'Worked on building Amex Go, a production ready Android app. Utilized custom views, threads, ButterKnife, GSON, and an Orchestration Layer to pull in and display data.',\n    },\n    {\n        company: 'AdAdapted',\n        title: 'Software Engineer Intern',\n        location: {\n            city: 'Ann Arbor',\n            state: 'Michigan',\n        },\n        duration: {\n            start: \"May '15\",\n            end: \"August '15\",\n        },\n        description:\n            'Successfully helped launch the Android SDK by leading the design and development of four Android applications to test and debug AdAdapted’s platform.',\n    },\n    {\n        company: 'Health Decisions',\n        title: 'Software Engineer Intern',\n        location: {\n            city: 'Plymouth',\n            state: 'Michigan',\n        },\n        duration: {\n            start: \"March '13\",\n            end: \"June '13\",\n        },\n        description:\n            'Used Microsoft SQL Server to improve accessibility of available healthcare information allowing for a streamlined work experience. Calculated and analyzed costs of medical procedures.',\n    },\n];\n\nexport const Work: React.FC = () => {\n    const classes = useStyles();\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        Work Experience\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2}>\n                    {experiences.map((experience) => (\n                        <Grid item xs={12} lg={6} key={experience.duration.end}>\n                            <Card>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                        align=\"left\"\n                                        className={classes.paddingBottom}\n                                    >\n                                        {experience.company}\n                                    </Typography>\n                                    <Typography\n                                        align=\"left\"\n                                        variant=\"subtitle1\"\n                                        component=\"p\"\n                                    >\n                                        {experience.title}\n                                    </Typography>\n                                    <Typography\n                                        align=\"left\"\n                                        variant=\"subtitle2\"\n                                        component=\"p\"\n                                    >\n                                        {experience.duration.start} -{' '}\n                                        {experience.duration.end}\n                                    </Typography>\n                                    <Typography\n                                        align=\"left\"\n                                        variant=\"subtitle2\"\n                                        component=\"p\"\n                                        className={classes.paddingBottom}\n                                    >\n                                        {experience.location.city},{' '}\n                                        {experience.location.state}\n                                    </Typography>\n                                    <Typography align=\"left\" variant=\"body2\">\n                                        {experience.description}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n","import {\n    createMuiTheme,\n    createStyles,\n    makeStyles,\n    Theme,\n} from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport ReactGA from 'react-ga';\nimport './App.css';\nimport MainAppBar from './components/AppBar';\nimport About from './pages/About';\nimport { Education } from './pages/Education';\nimport Home from './pages/Home';\nimport { Projects } from './pages/Projects';\nimport { Skills } from './pages/Skills';\nimport { Work } from './pages/Work';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        root: {\n            display: 'flex',\n        },\n        toolbar: {\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n        },\n    })\n);\n\nconst App: React.FC = () => {\n    const prefersDarkMode = useMediaQuery(\n        '@media (prefers-color-scheme: dark)'\n    );\n    const mainTheme = createMuiTheme({\n        palette: {\n            primary: {\n                contrastText: '#fff',\n                dark: '#004b8c',\n                light: '#59a4f0',\n                main: '#0476bd',\n            },\n            secondary: {\n                contrastText: '#fff',\n                dark: '#861a00',\n                light: '#f67a38',\n                main: '#bd4b04',\n            },\n            type: prefersDarkMode ? 'dark' : 'light',\n        },\n    });\n    const classes = useStyles();\n    ReactGA.initialize('UA-66108476-2');\n\n    return (\n        <ThemeProvider theme={mainTheme}>\n            <Router>\n                <div className=\"App\">\n                    <div className={classes.root}>\n                        <MainAppBar />\n                        <main className={classes.content}>\n                            <div className={classes.toolbar} />\n                            <Switch>\n                                <Route exact path=\"/\" component={Home} />\n                                <Route path=\"/about\" component={About} />\n                                <Route path=\"/skills\" component={Skills} />\n                                <Route path=\"/experience\" component={Work} />\n                                <Route\n                                    path=\"/education\"\n                                    component={Education}\n                                />\n                                <Route path=\"/projects\" component={Projects} />\n                            </Switch>\n                        </main>\n                    </div>\n                </div>\n            </Router>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}