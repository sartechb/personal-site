{"version":3,"sources":["components/AppBar.tsx","pages/About.tsx","pages/Home.tsx","pages/Skills.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","transition","transitions","create","duration","leavingScreen","easing","sharp","zIndex","drawer","appBarShift","marginLeft","enteringScreen","width","flexShrink","whiteSpace","drawerClose","overflowX","spacing","breakpoints","up","drawerOpen","hide","display","menuButton","marginRight","toolbar","alignItems","justifyContent","padding","mixins","menuItems","Icon","Home","displayText","key","link","Person","Code","MainAppBar","classes","useTheme","React","useState","open","setOpen","Fragment","CssBaseline","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","noWrap","Drawer","paper","direction","ChevronRight","ChevronLeft","Divider","List","map","menuItem","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","card","margin","maxWidth","divider","marginBottom","paperBackground","About","Grid","container","item","xs","gutterBottom","Paper","square","value","section","index","arr","paragraph","align","length","Card","CardContent","CardActions","Button","size","href","target","rel","styles","avatar","height","descriptions","props","descriptionInterval","state","counter","descriptionIndex","this","setInterval","setState","prevState","clearInterval","justify","Avatar","alt","src","Component","withStyles","title","paddingBottom","skillList","area","experienceWith","knowledgeable","proficient","Skills","skill","lg","join","content","flexGrow","root","App","prefersDarkMode","useMediaQuery","mainTheme","createMuiTheme","palette","contrastText","dark","light","main","secondary","type","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87e7e405.chunk.js","sourcesContent":["import {\n    AppBar,\n    CssBaseline,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport {\n    createStyles,\n    makeStyles,\n    Theme,\n    useTheme,\n} from '@material-ui/core/styles';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport {\n    ChevronLeft,\n    ChevronRight,\n    Code,\n    Home,\n    Menu,\n    Person,\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, { ComponentType } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface MenuItem {\n    Icon: ComponentType<SvgIconProps>;\n    displayText: string;\n    key: string;\n    link: string;\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        appBar: {\n            transition: theme.transitions.create(['width', 'margin'], {\n                duration: theme.transitions.duration.leavingScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            zIndex: theme.zIndex.drawer + 1,\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['width', 'margin'], {\n                duration: theme.transitions.duration.enteringScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n        drawer: {\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n        },\n        drawerClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                duration: theme.transitions.duration.leavingScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        drawerOpen: {\n            transition: theme.transitions.create('width', {\n                duration: theme.transitions.duration.enteringScreen,\n                easing: theme.transitions.easing.sharp,\n            }),\n            width: drawerWidth,\n        },\n        hide: {\n            display: 'none',\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        toolbar: {\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n        },\n    })\n);\n\nconst menuItems: MenuItem[] = [\n    {\n        Icon: Home,\n        displayText: 'Home',\n        key: 'home',\n        link: '/',\n    },\n    {\n        Icon: Person,\n        displayText: 'About',\n        key: 'about',\n        link: '/about',\n    },\n    {\n        Icon: Code,\n        displayText: 'Skills',\n        key: 'skills',\n        link: '/skills',\n    },\n];\n\nconst MainAppBar: React.FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <Menu />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Sarthak Bhandari\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? (\n                            <ChevronRight />\n                        ) : (\n                            <ChevronLeft />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {menuItems.map(menuItem => (\n                        <ListItem\n                            button\n                            key={menuItem.key}\n                            component={Link}\n                            to={menuItem.link}\n                        >\n                            <ListItemIcon>\n                                <menuItem.Icon />\n                            </ListItemIcon>\n                            <ListItemText primary={menuItem.displayText} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n        </React.Fragment>\n    );\n};\n\nexport default MainAppBar;\n","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Grid,\n    Paper,\n    Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport React from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            margin: '1rem 0',\n            maxWidth: '20rem',\n            width: '100%',\n        },\n        divider: {\n            marginBottom: '1rem',\n        },\n        paperBackground: {\n            padding: theme.spacing(3, 2),\n        },\n    })\n);\n\nconst About: React.FC = () => {\n    const classes = useStyles();\n    const sections = [\n        {\n            key: 'about',\n            value:\n                \"Hey! I'm Sarthak, a midwest boy in the big city. Currently I live in NYC, spending my days roaming around the city. I enjoy science fiction movies, electronic music, the rad themes of the 80s, and terrible jokes. I graduated from the University of Michigan in 2017 with a degree in Computer Science (Go Blue!).\",\n        },\n        {\n            key: 'work',\n            value:\n                \"Currently I'm working as a web developer at American Express. In the past I've worked on Android mobile apps and dabbled in machine learning, databases and computer security. My passion lies in human/computer interaction and good design.\",\n        },\n    ];\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        About Me\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperBackground} square>\n                        {sections.map((section, index, arr) => (\n                            <React.Fragment key={section.key}>\n                                <Typography paragraph align=\"left\">\n                                    {section.value}\n                                </Typography>\n                                {arr.length - 1 === index ? null : (\n                                    <Divider\n                                        variant=\"middle\"\n                                        className={classes.divider}\n                                    />\n                                )}\n                            </React.Fragment>\n                        ))}\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Card className={classes.card}>\n                        <CardContent>Reach out to me!</CardContent>\n                        <CardActions>\n                            <Button\n                                size=\"small\"\n                                href=\"https://github.com/sartechb\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                Github\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                href=\"https://twitter.com/sartechb\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                Twitter\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                href=\"https://www.linkedin.com/in/sarthakbhandari/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                LinkedIn\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                href=\"mailto:hello@sarthakb.com\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                Email\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default About;\n","import { Avatar, Button, Grid, Typography } from '@material-ui/core';\nimport { createStyles, withStyles, WithStyles } from '@material-ui/styles';\n\nimport React from 'react';\n\nconst styles = createStyles({\n    avatar: {\n        height: 256,\n        margin: 10,\n        marginBottom: 50,\n        width: 256,\n    },\n});\n\nconst descriptions = [\n    'a web developer',\n    'a New Yorker',\n    'a fan of the 80s',\n    'a PC gamer',\n    'an amatuer photographer',\n    'a cooking enthusiast',\n];\ninterface HomeProps extends WithStyles<typeof styles> {\n    prop: string;\n}\ninterface HomeState {\n    counter: number;\n    descriptionIndex: number;\n}\nclass Home extends React.Component<HomeProps, HomeState> {\n    public descriptionInterval!: NodeJS.Timeout;\n    public constructor(props: Readonly<HomeProps>) {\n        super(props);\n        this.state = {\n            counter: 0,\n            descriptionIndex: 0,\n        };\n    }\n\n    public componentDidMount() {\n        this.descriptionInterval = setInterval(() => {\n            if (this.state.counter === descriptions.length) {\n                this.setState({ counter: 0 });\n            }\n            this.setState(prevState => ({\n                counter: prevState.counter + 1,\n                descriptionIndex: prevState.counter % descriptions.length,\n            }));\n        }, 3000);\n    }\n\n    public componentWillUnmount() {\n        clearInterval(this.descriptionInterval);\n    }\n\n    public render() {\n        const { classes } = this.props;\n        const { descriptionIndex } = this.state;\n        return (\n            <React.Fragment>\n                <Grid\n                    container\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    direction=\"column\"\n                >\n                    <Grid item xs={12}>\n                        <Avatar\n                            alt=\"Sarthak Bhandari\"\n                            src={process.env.PUBLIC_URL + '/avatar.jpg'}\n                            className={classes.avatar}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                            Hello, Sarthak here. I'm{' '}\n                            {descriptions[descriptionIndex]}.\n                        </Typography>\n                    </Grid>\n                    <br />\n                    <Grid item>\n                        <Button variant=\"contained\" color=\"primary\">\n                            Download Resume\n                        </Button>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Home);\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport React from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            paddingBottom: '1rem',\n        },\n    })\n);\n\ninterface Skill {\n    area: string;\n    experienceWith: string[];\n    knowledgeable: string[];\n    proficient: string[];\n}\n\nconst skillList: Skill[] = [\n    {\n        area: 'Front-End',\n        experienceWith: ['Sass', 'Babel', 'Webpack'],\n        knowledgeable: ['TypeScript', 'Express', 'CSS', 'AngularJS', 'Redux'],\n        proficient: ['React', 'JavaScript/ES6', 'HTML'],\n    },\n    {\n        area: 'Back-End',\n        experienceWith: ['Java', 'Python (Flask, SciKit, NumPy)'],\n        knowledgeable: ['SQL'],\n        proficient: ['Node'],\n    },\n    {\n        area: 'Testing & CI/CD',\n        experienceWith: ['Karma', 'Mocha', 'Cypress'],\n        knowledgeable: ['TravisCI', 'Wiremock'],\n        proficient: ['Jenkins', 'Jest', 'Enzyme'],\n    },\n    {\n        area: 'Miscellaneous',\n        experienceWith: ['Spanish', 'Hindi', 'Adobe Photoshop'],\n        knowledgeable: ['Windows', 'Linux', 'Microsoft Suite'],\n        proficient: ['English', 'MacOS'],\n    },\n];\n\nexport const Skills: React.FC = () => {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n                        Skills\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2}>\n                    {skillList.map(skill => (\n                        <Grid item xs={12} lg={3} key={skill.area}>\n                            <Card>\n                                <CardContent>\n                                    <Typography\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                        align=\"left\"\n                                        className={classes.title}\n                                    >\n                                        {skill.area}\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        align=\"left\"\n                                    >\n                                        Proficient\n                                    </Typography>\n                                    <Typography align=\"left\">\n                                        {skill.proficient.join(', ')}\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        align=\"left\"\n                                    >\n                                        Knowledgeable\n                                    </Typography>\n                                    <Typography align=\"left\">\n                                        {skill.knowledgeable.join(', ')}\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        align=\"left\"\n                                    >\n                                        Experience With\n                                    </Typography>\n                                    <Typography align=\"left\">\n                                        {skill.experienceWith.join(', ')}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n","import {\n    createMuiTheme,\n    createStyles,\n    makeStyles,\n    Theme,\n} from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport './App.css';\nimport MainAppBar from './components/AppBar';\nimport About from './pages/About';\nimport Home from './pages/Home';\nimport { Skills } from './pages/Skills';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n        root: {\n            display: 'flex',\n        },\n        toolbar: {\n            alignItems: 'center',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n        },\n    })\n);\n\nconst App: React.FC = () => {\n    const prefersDarkMode = useMediaQuery(\n        '@media (prefers-color-scheme: dark)'\n    );\n    const mainTheme = createMuiTheme({\n        palette: {\n            primary: {\n                contrastText: '#fff',\n                dark: '#004b8c',\n                light: '#59a4f0',\n                main: '#0476bd',\n            },\n            secondary: {\n                contrastText: '#fff',\n                dark: '#861a00',\n                light: '#f67a38',\n                main: '#bd4b04',\n            },\n            type: prefersDarkMode ? 'dark' : 'light',\n        },\n    });\n    const classes = useStyles();\n    return (\n        <ThemeProvider theme={mainTheme}>\n            <Router>\n                <div className=\"App\">\n                    <div className={classes.root}>\n                        <MainAppBar />\n                        <main className={classes.content}>\n                            <div className={classes.toolbar} />\n                            <Switch>\n                                <Route exact path=\"/\" component={Home} />\n                                <Route path=\"/about\" component={About} />\n                                <Route path=\"/skills\" component={Skills} />\n                            </Switch>\n                        </main>\n                    </div>\n                </div>\n            </Router>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}